<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" type="image/png" href="https://codekitchen.community/uploads/default/optimized/2X/a/a30744ee5e971bdbd655b1e4e972863ff2f2802c_2_32x32.png">
    <link rel="apple-touch-icon" type="image/png" href="https://codekitchen.community/uploads/default/optimized/2X/1/1505c540b9e4ca70eff497de7daa1e59e5fb8f82_2_180x180.jpeg">
    <title>CodeKitchen Community</title>
    <style>
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Noto Sans', Helvetica, Arial, sans-serif;
    background-color: var(--bg-primary);
    color: var(--text-primary);
    line-height: 1.5;
    transition: background-color 0.3s ease, color 0.3s ease;
}

/* Light mode variables (default) */
:root {
    --bg-primary: #ffffff;
    --bg-secondary: #f6f8fa;
    --bg-tertiary: #f1f3f4;
    --border-primary: #d1d9e0;
    --border-secondary: #656d76;
    --text-primary: #1f2328;
    --text-secondary: #656d76;
    --text-link: #0969da;
    --accent-primary: #39845b;
    --accent-secondary: #2d6b47;
    --accent-gradient: linear-gradient(135deg, #39845b, #2d6b47);
}

/* Dark mode variables */
[data-theme="dark"] {
    --bg-primary: #0d1117;
    --bg-secondary: #161b22;
    --bg-tertiary: #21262d;
    --border-primary: #30363d;
    --border-secondary: #8b949e;
    --text-primary: #e6edf3;
    --text-secondary: #8b949e;
    --text-link: #58a6ff;
    --accent-primary: #39845b;
    --accent-secondary: #2d6b47;
    --accent-gradient: linear-gradient(135deg, #39845b, #2d6b47);
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 24px;
}

/* Header */
.header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 16px;
    padding-bottom: 16px;
    border-bottom: 1px solid #30363d;
}

.repo-name {
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 18px;
    font-weight: 500;
    color: var(--text-primary);
}

.home-link {
    text-decoration: none;
    color: var(--text-primary);
}

.repo-logo {
    height: 24px;
    width: auto;
}

.header-controls {
    display: flex;
    align-items: center;
    gap: 8px;
}

.star-button, .language-switch, .theme-toggle {
    background: var(--bg-tertiary);
    border: 1px solid var(--border-primary);
    color: var(--text-primary);
    padding: 5px 12px;
    border-radius: 6px;
    cursor: pointer;
    font-size: 12px;
    transition: all 0.2s;
}

.star-button:hover, .language-switch:hover, .theme-toggle:hover {
    background: var(--border-primary);
    border-color: var(--border-secondary);
}

.star-button {
    display: flex;
    align-items: center;
    gap: 4px;
}

.star-button:hover {
    transform: scale(1.1);
}

.theme-toggle {
    display: flex;
    align-items: center;
    gap: 4px;
}

/* README Content */
.readme-container {
    background: var(--bg-primary);
    border: 1px solid var(--border-primary);
    border-radius: 6px;
    overflow: hidden;
}

.readme-header {
    background: var(--bg-secondary);
    border-bottom: 1px solid var(--border-primary);
    padding: 16px;
    display: flex;
    align-items: center;
    justify-content: space-between;
}

/* Tabs in README header */
.readme-tabs {
    display: flex;
    gap: 0;
}

.readme-tab {
    padding: 8px 16px;
    background: none;
    border: none;
    color: var(--text-secondary);
    cursor: pointer;
    font-size: 14px;
    border-bottom: 2px solid transparent;
    transition: all 0.2s;
    border-radius: 6px 6px 0 0;
    text-decoration: none;
    display: flex;
    align-items: center;
    gap: 6px;
}

.readme-tab.active {
    border-bottom-color: var(--accent-primary);
    color: var(--text-primary);
    background: var(--bg-primary);
}

.readme-tab:hover:not(.active) {
    color: var(--text-primary);
    background: var(--bg-tertiary);
    text-decoration: none;
}

.readme-controls {
    display: flex;
    align-items: center;
    gap: 8px;
    position: relative;
}

.icon-btn {
    background: none;
    border: none;
    color: var(--text-secondary);
    cursor: pointer;
    font-size: 16px;
    padding: 6px;
    border-radius: 4px;
    transition: all 0.2s;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 28px;
    height: 28px;
}

.icon-btn:hover {
    background: var(--bg-tertiary);
    color: var(--text-primary);
}

.main-content {
    padding: 32px;
}

/* Content styles */
.content {
    display: none;
}

.content.active {
    display: block;
}

h1 {
    font-size: 32px;
    font-weight: 600;
    margin-bottom: 16px;
    color: var(--text-primary);
    position: relative;
    padding-left: 0;
}

h1:hover .anchor {
    opacity: 1;
}

h2 {
    font-size: 24px;
    font-weight: 600;
    margin: 32px 0 16px 0;
    color: var(--text-primary);
    position: relative;
    padding-left: 0;
}

h2:hover .anchor {
    opacity: 1;
}

h3 {
    font-size: 20px;
    font-weight: 600;
    margin: 24px 0 16px 0;
    color: var(--text-primary);
    position: relative;
    padding-left: 0;
}

h3:hover .anchor {
    opacity: 1;
}

.anchor {
    position: absolute;
    left: -20px;
    top: 50%;
    transform: translateY(-50%);
    opacity: 0;
    transition: opacity 0.2s;
    color: var(--text-link);
    text-decoration: none;
    font-size: 16px;
    width: 16px;
    height: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
}

p {
    color: var(--text-primary);
}

strong {
    color: var(--text-primary);
    font-weight: 600;
}

a {
    color: var(--text-link);
    text-decoration: none;
}

a:hover {
    text-decoration: underline;
}

.community-badge {
    display: inline-flex;
    align-items: center;
    background: var(--accent-gradient);
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 12px;
    font-weight: 600;
    margin-left: 8px;
}

.highlight-box {
    background: var(--bg-secondary);
    border: 1px solid var(--border-primary);
    border-radius: 6px;
    padding: 16px;
    margin: 16px 0;
    border-left: 4px solid var(--accent-primary);
}

.stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 16px;
    margin: 24px 0;
}

.stat-card {
    background: var(--bg-secondary);
    border: 1px solid var(--border-primary);
    border-radius: 6px;
    padding: 16px;
    text-align: center;
}

.stat-number {
    font-size: 24px;
    font-weight: 600;
    color: var(--accent-primary);
}

.stat-label {
    font-size: 14px;
    color: var(--text-secondary);
    margin-top: 4px;
}

.icon {
    width: 16px;
    height: 16px;
    fill: currentColor;
}

/* Outline Dropdown */
.outline-dropdown {
    position: relative;
    display: inline-block;
}

.outline-menu {
    position: absolute;
    top: 100%;
    right: 0;
    margin-top: 8px;
    width: 280px;
    max-height: 300px;
    background: var(--bg-secondary);
    border: 1px solid var(--border-primary);
    border-radius: 6px;
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px);
    transition: all 0.2s ease;
    overflow-y: auto;
}

[data-theme="dark"] .outline-menu {
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.4);
}

.outline-menu.open {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
}

.outline-menu-header {
    padding: 12px 16px;
    border-bottom: 1px solid var(--border-primary);
    font-weight: 600;
    font-size: 14px;
    color: var(--text-primary);
    background: var(--bg-primary);
    border-radius: 6px 6px 0 0;
}

.outline-menu-content {
    padding: 8px;
    max-height: 240px;
    overflow-y: auto;
}

.outline-menu-item {
    display: block;
    padding: 6px 12px;
    color: var(--text-primary);
    text-decoration: none;
    border-radius: 4px;
    margin-bottom: 2px;
    transition: all 0.15s;
    font-size: 13px;
    line-height: 1.3;
    cursor: pointer;
    border: none;
    background: none;
    width: 100%;
    text-align: left;
}

.outline-menu-item:hover {
    background: var(--bg-tertiary);
    text-decoration: none;
    color: var(--text-primary);
}

.outline-menu-item.h1 {
    font-weight: 600;
    padding-left: 12px;
    font-size: 14px;
}

.outline-menu-item.h2 {
    padding-left: 20px;
    font-size: 12px;
}

.outline-menu-item.h3 {
    padding-left: 28px;
    font-size: 11px;
    color: var(--text-secondary);
}

.social-links {
    display: flex;
    flex-wrap: wrap;
    gap: 12px;
    margin: 16px 0;
}

.social-link {
    display: inline-flex;
    align-items: center;
    gap: 6px;
    padding: 6px 12px;
    background: var(--bg-secondary);
    border: 1px solid var(--border-primary);
    border-radius: 6px;
    text-decoration: none;
    color: var(--text-primary);
    font-size: 13px;
    transition: all 0.2s;
}

.social-link:hover {
    background: var(--bg-tertiary);
    border-color: var(--accent-primary);
    text-decoration: none;
    color: var(--text-primary);
}

.social-icon {
    width: 16px;
    height: 16px;
}

.image-section {
    display: flex;
    gap: 20px;
    margin: 24px 0;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
}

.image-section p {
    margin-bottom: 10px;
}

.section-image {
    flex-shrink: 0;
    width: 40%;
    height: auto;
    border-radius: 8px;
    border: 1px solid var(--border-primary);
}

.image-content {
    display: flex;
    flex-direction: column;
    justify-content: center;
    height: 100%;
    flex: 2 1 300px;
    padding: 1rem;
}

.image-section.center {
    text-align: center;
    flex-direction: column;
    align-items: center;
    display: flex;
    flex-wrap: wrap;
}

.image-section.center .section-image {
    width: auto;
    max-width: 100%;
}

/* Footer */
.footer {
    margin-top: 24px;
    padding: 24px 0;
}

.footer-content {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 24px;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 12px;
    color: var(--text-secondary);
    font-size: 14px;
}

.footer-logo {
    height: 20px;
    width: auto;
}

.slogan-box {
    background: var(--accent-gradient);
    color: white;
    padding: 20px;
    border-radius: 8px;
    text-align: center;
    margin: 24px 0;
    font-size: 18px;
    font-weight: 600;
}

.intro-text {
    font-style: italic;
    color: var(--text-secondary);
    text-align: center;
    margin: 16px 0;
    font-size: 14px;
    line-height: 1.6;
}

.contact-info {
    background: var(--bg-secondary);
    border: 1px solid var(--border-primary);
    border-radius: 6px;
    padding: 16px;
    margin: 16px 0;
}

.contact-item {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-bottom: 8px;
    font-size: 14px;
    color: var(--text-primary);
}

.contact-item:last-child {
    margin-bottom: 0;
}

.contact-label {
    font-weight: 600;
    min-width: 60px;
    color: var(--text-primary);
}

.cta-button {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    background: var(--accent-primary);
    color: white;
    padding: 10px 16px;
    border-radius: 6px;
    text-decoration: none;
    font-weight: 600;
    transition: all 0.2s;
    margin: 8px 0;
}

.cta-button:hover {
    background: var(--accent-secondary);
    text-decoration: none;
    color: white;
    transform: translateY(-1px);
}

/* Star Tornado Animation */
.star-tornado-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    pointer-events: none;
    z-index: 9999;
}

.star-particle {
    position: absolute;
    font-size: 16px;
    color: #ffd700;
    pointer-events: none;
    z-index: 10000;
}

@keyframes starTornado {
    0% {
        transform: rotate(0deg) translateX(0px) scale(0);
        opacity: 0;
    }
    10% {
        opacity: 1;
        transform: rotate(36deg) translateX(50px) scale(1);
    }
    50% {
        opacity: 1;
        transform: rotate(180deg) translateX(150px) scale(1.2);
    }
    90% {
        opacity: 1;
        transform: rotate(324deg) translateX(250px) scale(0.8);
    }
    100% {
        opacity: 0;
        transform: rotate(360deg) translateX(300px) scale(0);
    }
}

@keyframes starSpiral {
    0% {
        transform: rotate(0deg) translateX(0px) translateY(0px) scale(0);
        opacity: 0;
    }
    10% {
        opacity: 1;
        transform: rotate(72deg) translateX(80px) translateY(-20px) scale(1);
    }
    30% {
        opacity: 1;
        transform: rotate(216deg) translateX(160px) translateY(-60px) scale(1.3);
    }
    70% {
        opacity: 1;
        transform: rotate(504deg) translateX(240px) translateY(-120px) scale(1);
    }
    100% {
        opacity: 0;
        transform: rotate(720deg) translateX(320px) translateY(-200px) scale(0);
    }
}

@keyframes starFloat1 {
    0% {
        transform: translateY(0px) translateX(0px) scale(0) rotate(0deg);
        opacity: 0;
    }
    10% {
        opacity: 1;
        transform: translateY(-80px) translateX(20px) scale(1) rotate(45deg);
    }
    70% {
        opacity: 1;
        transform: translateY(-400px) translateX(-30px) scale(1.3) rotate(180deg);
    }
    85% {
        opacity: 1;
        transform: translateY(-550px) translateX(30px) scale(1.2) rotate(270deg);
    }
    100% {
        opacity: 0;
        transform: translateY(-650px) translateX(50px) scale(0) rotate(360deg);
    }
}

@keyframes starFloat2 {
    0% {
        transform: translateY(0px) translateX(0px) scale(0) rotate(0deg);
        opacity: 0;
    }
    15% {
        opacity: 1;
        transform: translateY(-100px) translateX(-40px) scale(1.1) rotate(90deg);
    }
    75% {
        opacity: 1;
        transform: translateY(-500px) translateX(60px) scale(1.4) rotate(270deg);
    }
    90% {
        opacity: 1;
        transform: translateY(-700px) translateX(-10px) scale(1.3) rotate(380deg);
    }
    100% {
        opacity: 0;
        transform: translateY(-800px) translateX(-20px) scale(0) rotate(450deg);
    }
}

@keyframes starFloat3 {
    0% {
        transform: translateY(0px) translateX(0px) scale(0) rotate(0deg);
        opacity: 0;
    }
    8% {
        opacity: 1;
        transform: translateY(-60px) translateX(15px) scale(0.9) rotate(30deg);
    }
    45% {
        opacity: 1;
        transform: translateY(-250px) translateX(-45px) scale(1.2) rotate(120deg);
    }
    80% {
        opacity: 1;
        transform: translateY(-380px) translateX(20px) scale(1.1) rotate(200deg);
    }
    100% {
        opacity: 0;
        transform: translateY(-450px) translateX(35px) scale(0) rotate(240deg);
    }
}

@keyframes starFloat4 {
    0% {
        transform: translateY(0px) translateX(0px) scale(0) rotate(0deg);
        opacity: 0;
    }
    18% {
        opacity: 1;
        transform: translateY(-120px) translateX(-25px) scale(1.3) rotate(60deg);
    }
    65% {
        opacity: 1;
        transform: translateY(-450px) translateX(50px) scale(1.4) rotate(200deg);
    }
    85% {
        opacity: 1;
        transform: translateY(-600px) translateX(80px) scale(1.5) rotate(300deg);
    }
    95% {
        opacity: 1;
        transform: translateY(-800px) translateX(-40px) scale(1.2) rotate(420deg);
    }
    100% {
        opacity: 0;
        transform: translateY(-900px) translateX(-60px) scale(0) rotate(480deg);
    }
}

@keyframes starFloat5 {
    0% {
        transform: translateY(0px) translateX(0px) scale(0) rotate(0deg);
        opacity: 0;
    }
    12% {
        opacity: 1;
        transform: translateY(-70px) translateX(35px) scale(1) rotate(75deg);
    }
    50% {
        opacity: 1;
        transform: translateY(-280px) translateX(-35px) scale(1.2) rotate(150deg);
    }
    75% {
        opacity: 1;
        transform: translateY(-420px) translateX(-55px) scale(1.1) rotate(200deg);
    }
    92% {
        opacity: 1;
        transform: translateY(-520px) translateX(15px) scale(1.0) rotate(290deg);
    }
    100% {
        opacity: 0;
        transform: translateY(-550px) translateX(25px) scale(0) rotate(315deg);
    }
}

/* Responsive */
@media (max-width: 600px) {
    .readme-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 12px;
    }
}

@media (max-width: 768px) {
    .container {
        padding: 16px;
    }

    .header {
        flex-direction: column;
        gap: 16px;
        align-items: flex-start;
    }

    .readme-title-area {
        width: 100%;
    }

    .readme-tabs {
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
    }

    .readme-controls {
        align-self: flex-end;
    }

    .main-content {
        padding: 16px;
    }

    h1 {
        font-size: 24px;
    }

    h2 {
        font-size: 20px;
    }

    h3 {
        font-size: 18px;
    }

    .image-section {
        flex-direction: column;
        align-items: center;
        text-align: center;
    }

    .section-image {
        width: 100%;
        max-width: 300px;
        flex: 1 1 300px;
        border-radius: 12px;
        margin: 1rem;
    }

    .footer-content {
        padding: 0 16px;
        flex-direction: column;
        gap: 8px;
        text-align: center;
    }

    .social-links {
        justify-content: center;
    }
}
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <div class="repo-name">
                <img src="https://codekitchen.community/uploads/default/original/2X/a/a30744ee5e971bdbd655b1e4e972863ff2f2802c.png" alt="CodeKitchen Community" class="repo-logo" id="repo-logo">
                <a href="https://codekitchen.community" title="Go home" class="home-link">
                    <span>codekitchen.community</span>
                </a>
            </div>
            <div class="header-controls">
                <!-- <button class="star-button" onclick="createStarTornado()">
                    <span>⭐</span>
                </button> -->
                <button class="theme-toggle" onclick="toggleTheme()">
                    <span id="theme-icon">🌙</span>
                </button>
                <button class="language-switch" onclick="toggleLanguage()">
                    <span id="lang-text">🌐</span>
                </button>
            </div>
        </div>

        
<div class="readme-container">
    <div class="readme-header">
        <div class="readme-tabs">
            <button class="readme-tab active" onclick="showContent('readme')">
                <span class="tab-icon">📖</span>
                <span id="readme-tab">说明文档</span>
            </button>
            <button class="readme-tab" onclick="showContent('conduct')">
                <span class="tab-icon">🤝</span>
                <span id="conduct-tab">行为准则</span>
            </button>
            <a href="https://codekitchen.community/c/blog" class="readme-tab">
                <span class="tab-icon">📝</span>
                <span id="blog-tab">博客</span>
            </a>
            <a href="https://codekitchen.community" class="readme-tab">
                <span class="tab-icon">🔙</span>
                <span id="home-tab">返回社区</span>
            </a>
        </div>
        <div class="readme-controls">
            <a class="icon-btn" style="font-size: 14px; transform: scaleX(-1); text-decoration: none;" href="https://github.com/codekitchen-community/pages/tree/main/readme" target="_blank">
                ✏️
            </a>
            <div class="outline-dropdown">
                <button class="icon-btn" onclick="toggleOutline()" style="font-size: 18px;">
                    ☰
                </button>
                <div class="outline-menu" id="outline-menu">
                    <div class="outline-menu-header">
                        <span id="outline-title">大纲</span>
                    </div>
                    <div class="outline-menu-content" id="outline-content">
                        <!-- Outline items will be dynamically generated -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="main-content">
        <!-- README Content -->
        <div id="readme-content" class="content active">
            
            <!-- English README Content -->
            <div id="readme-english" class="content">
                
<h1 id="codekitchen-community">
    <a href="#codekitchen-community" class="anchor">#</a>
    CodeKitchen Community
</h1>

<div class="highlight-box">
    <p><strong>CodeKitchen Community</strong> is a group formed by people who are passionate about programming and open source. The heart of the community is the website <a href="https://codekitchen.community" target="_blank">https://codekitchen.community</a>.</p>
</div>

<h2 id="about-us">
    <a href="#about-us" class="anchor">#</a>
    About Us
</h2>


    <p>We see programming as both a personal hobby and a fundamental skill in the modern world. Open source, in turn, serves as a way for developers to connect, collaborate, and drive technology forward together.</p>

    <p>We're dedicated to exploring, educating, and promoting both. From time to time, the community hosts events related to programming and open source, helping more people discover—or rediscover—the joy of coding.</p>


<h2 id="social-media">
    <a href="#social-media" class="anchor">#</a>
    Useful Links
</h2>

<div class="social-links">
    
        <a href="https://github.com/codekitchen-community" target="_blank" class="social-link">
            <span class="social-icon">🐙</span>
            GitHub @codekitchen-community
        </a>
    
        <a href="https://twitter.com/codekitchen_" target="_blank" class="social-link">
            <span class="social-icon">🐦</span>
            Twitter @codekitchen_
        </a>
    
        <a href="https://space.bilibili.com/3493077773716257" target="_blank" class="social-link">
            <span class="social-icon">📺</span>
            Bilibili @CodeKitchen
        </a>
    
        <a href="https://www.youtube.com/@CodeKitchenCommunity" target="_blank" class="social-link">
            <span class="social-icon">▶️</span>
            YouTube @CodeKitchenCommunity
        </a>
    
        <a href="https://codekitchen.community/uploads/default/original/2X/3/3314010cb5868562a567841b204ca7c6224619b9.png" target="_blank" class="social-link">
            <span class="social-icon">💬</span>
            WeChat @codekitchen
        </a>
    
        <a href="https://www.xiaohongshu.com/user/profile/654f68070000000002029d1f" target="_blank" class="social-link">
            <span class="social-icon">📖</span>
            Xiaohongshu @codekitchen
        </a>
    
</div>

<h2 id="events">
    <a href="#events" class="anchor">#</a>
    Features
</h2>

<div class="image-section">
    <img src="https://codekitchen.community/uploads/default/original/2X/6/6176f181166439a3c3e780aea83ba52faeed3a79.jpeg" alt="Song of Open Source" class="section-image">
    <div class="image-content">
        
            <p><strong>Song of Open Source: Let's do open source projects together!</strong></p>
        
            <p>Song of Open Source is an event that encourages and helps everyone participate in open source projects, promotes the development of open source projects, and incubates project ideas.</p>
        
            <p>So far, we have held six CodeKitchen Songs of Open Source. For each Song of Open Source, we invite or gather open source projects to participate, and project maintainers create tasks and act as mentors to help contributors complete one open source contribution.</p>
        
            <p>If you have an open source project that you want to join, welcome to sign up <a href="https://codekitchen.community/t/topic/1159" target="_blank">here</a>. Friends who want to participate in the Song of Open Source can follow our social media to learn about the latest Song of Open Source updates.</p>
        
    </div>
</div>

<div class="image-section" style="flex-direction: row-reverse;">
    <img src="https://codekitchen.community/uploads/default/original/2X/b/b54d736dfdc461e3e0304b0534012956a38ff5d8.jpeg" alt="Kitchen Activities" class="section-image">
    <div class="image-content">
        
            <p><strong>Kitchen Activities</strong></p>
        
            <p>In addition to the Song of Open Source, we also hold other interesting events initiated by CodeKitchen or community members.</p>
        
            <p>We plan to prepare a CodeKitchen Annual Conference (CodeKitchenConf) in the future - an annual gathering organized by and for programming and open source enthusiasts. The goal is to create a technology conference with minimal commercial atmosphere, returning to humans as the main focus, while being fun and generating value.</p>
        
            <p>Visit our <a href="https://codekitchen.community/c/events" target="_blank">events page</a> to see upcoming events!</p>
        
    </div>
</div>

<div class="image-section">
    <img src="https://codekitchen.community/uploads/default/original/2X/9/9b1be299627d0ef4c0f4b3586a750f13c954de99.jpeg" alt="Kitchen Committee" class="section-image">
    <div class="image-content">
        
            <p><strong>Join the Kitchen Committee</strong></p>
        
            <p>Want to help us plan and organize the next fun event? Fill out the application form below to join our volunteer team — <em>The Kitchen Committee</em>.</p>
        
            <p>We want to build the community in a more open way, so most of the community management affairs will be discussed publicly on the website. You can read the topics under the <a href="https://codekitchen.community/c/kitchen" target="_blank">Kitchen category</a> to learn what we are doing. Welcome to join the discussion and participate!</p>
        
        
        <a href="https://jsj.top/f/LHzJBH" target="_blank" class="cta-button">
            📝 Join the Kitchen Committee
        </a>
    </div>
</div>



<h2 id="our-mission">
    <a href="#our-mission" class="anchor">#</a>
    Missions
</h2>


    <p>We hope to create a relaxing and rewarding community where community members can:</p>


<div class="stats-grid">
    
        <div class="stat-card">
            <div class="stat-number">Learn</div>
            <div class="stat-label">Get into programming and explore new technologies</div>
        </div>
    
        <div class="stat-card">
            <div class="stat-number">Connect</div>
            <div class="stat-label">Build meaningful relationships</div>
        </div>
    
        <div class="stat-card">
            <div class="stat-number">Create</div>
            <div class="stat-label">Realize new ideas and creativity</div>
        </div>
    
        <div class="stat-card">
            <div class="stat-number">Share</div>
            <div class="stat-label">Participate in discussions and contribute to open source projects</div>
        </div>
    
</div>

<h2 id="contact-collaboration">
    <a href="#contact-collaboration" class="anchor">#</a>
    Contact
</h2>

<p>Business cooperation & sponsorship: Please contact community administrator Grey Li:</p>

<div class="contact-info">
    <div class="contact-item">
        <span class="contact-label">Email:</span>
        <a href="mailto:gl@greyli.com">gl@greyli.com</a>
    </div>
</div>
            </div>

             <!-- Chinese README -->
            <div id="readme-chinese" class="content active">
                
<h1 id="codekitchen-community">
    <a href="#codekitchen-community" class="anchor">#</a>
    代码厨房社区
</h1>

<div class="highlight-box">
    <p>代码厨房（CodeKitchen Community）是一个由编程和和开源爱好者组成的社区。社区的主体是 <a href="https://codekitchen.community">https://codekitchen.community</a> 网站。</p>
</div>

<!-- <h2 id="about-us">
    <a href="#about-us" class="anchor">#</a>
    About Us
</h2> -->


    <p>“编程”作为一种爱好和现代人类基本技能，“开源”作为开发者之间建立友好连接并共同推动技术发展的方式。我们热衷于这两者的探索、教育和推广。</p>

    <p>社区会不定期举办一些编程和开源相关的活动，让更多的人发现或重新发现编程的乐趣。</p>


<h2 id="social-media">
    <a href="#social-media" class="anchor">#</a>
    Useful Links
</h2>

<div class="social-links">
    
        <a href="https://github.com/codekitchen-community" target="_blank" class="social-link">
            <span class="social-icon">🐙</span>
            GitHub @codekitchen-community
        </a>
    
        <a href="https://twitter.com/codekitchen_" target="_blank" class="social-link">
            <span class="social-icon">🐦</span>
            Twitter @codekitchen_
        </a>
    
        <a href="https://space.bilibili.com/3493077773716257" target="_blank" class="social-link">
            <span class="social-icon">📺</span>
            哔哩哔哩 @CodeKitchen
        </a>
    
        <a href="https://www.youtube.com/@CodeKitchenCommunity" target="_blank" class="social-link">
            <span class="social-icon">▶️</span>
            YouTube @CodeKitchenCommunity
        </a>
    
        <a href="https://codekitchen.community/uploads/default/original/2X/3/3314010cb5868562a567841b204ca7c6224619b9.png" target="_blank" class="social-link">
            <span class="social-icon">💬</span>
            微信公众号 @codekitchen
        </a>
    
        <a href="https://www.xiaohongshu.com/user/profile/654f68070000000002029d1f" target="_blank" class="social-link">
            <span class="social-icon">📖</span>
            小红书 @codekitchen
        </a>
    
</div>

<h2 id="events">
    <a href="#events" class="anchor">#</a>
    Features
</h2>

<div class="image-section">
    <img src="https://codekitchen.community/uploads/default/original/2X/6/6176f181166439a3c3e780aea83ba52faeed3a79.jpeg" alt="开源松" class="section-image">
    <div class="image-content">
        
            <p><strong>开源松：一起来做开源项目吧！</strong></p>
        
            <p>开源松（Song of Open Source）是一个鼓励和帮助大家参与开源项目、推动开源项目发展、孵化项目 idea 的活动。</p>
        
            <p>目前为止，我们已经举办了 7 次代码厨房开源松。每一期开源松，我们会邀请或召集开源项目参加，项目维护者会创建任务并担任导师，帮助贡献者完成一次开源贡献。</p>
        
            <p>如果你有开源项目想要加入，欢迎来 <a href="https://codekitchen.community/t/topic/1159" target="_blank">这里</a> 报名。想要参与开源松的朋友可以定期查看我们的<a href="https://codekitchen.community/c/song" target="_blank">开源松任务看板</a>，或是关注我们的社交媒体，以便了解最新的开源松动态。</p>
        
    </div>
</div>

<div class="image-section" style="flex-direction: row-reverse;">
    <img src="https://codekitchen.community/uploads/default/original/2X/b/b54d736dfdc461e3e0304b0534012956a38ff5d8.jpeg" alt="厨房活动" class="section-image">
    <div class="image-content">
        
            <p><strong>厨房活动</strong></p>
        
            <p>除了开源松，我们也会举办其他由代码厨房或社区成员发起的有趣活动。</p>
        
            <p>我们计划在未来筹备一场代码厨房年会（CodeKitchenConf）——由编程和开源爱好者办给自己和朋友们的年度聚会。目标是一场最小商业氛围、回归人类作为主体、在好玩的同时产生价值的技术会议。</p>
        
            <p>访问我们的 <a href="https://codekitchen.community/c/events" target="_blank">活动页面</a> 查看即将举行的活动！</p>
        
    </div>
</div>

<div class="image-section">
    <img src="https://codekitchen.community/uploads/default/original/2X/9/9b1be299627d0ef4c0f4b3586a750f13c954de99.jpeg" alt="代码厨房组委会" class="section-image">
    <div class="image-content">
        
            <p><strong>加入代码厨房组委会</strong></p>
        
            <p>想帮助我们策划和组织下一个有趣的活动吗？填写下面的申请表，加入我们的志愿者团队——<em>代码厨房组委会</em>。</p>
        
            <p>我们想以更开放的方式来建设社区，因此大部分的社区管理事务同时也会在网站上公开讨论。你可以阅读 <a href="https://codekitchen.community/c/kitchen" target="_blank">后厨分类</a> 下的主题，了解我们正在做什么。欢迎加入讨论和参与进来！</p>
        
        
        <a href="https://jsj.top/f/LHzJBH" target="_blank" class="cta-button">
            📝 加入代码厨房组委会
        </a>
    </div>
</div>

<h2 id="our-mission">
    <a href="#our-mission" class="anchor">#</a>
    Missions
</h2>


    <p>我们希望可以创建一个让人放松和有所收获的社区，让社区成员可以：</p>


<div class="stats-grid">
    
        <div class="stat-card">
            <div class="stat-number">学习</div>
            <div class="stat-label">入门编程和探索新技术</div>
        </div>
    
        <div class="stat-card">
            <div class="stat-number">连接</div>
            <div class="stat-label">建立有意义的关系</div>
        </div>
    
        <div class="stat-card">
            <div class="stat-number">创造</div>
            <div class="stat-label">实现新的想法和创意</div>
        </div>
    
        <div class="stat-card">
            <div class="stat-number">分享</div>
            <div class="stat-label">参与讨论并贡献开源项目</div>
        </div>
    
</div>

<h2 id="contact-collaboration">
    <a href="#contact-collaboration" class="anchor">#</a>
    Contact
</h2>

<p>合作 & 捐赠请联系社区管理员李辉（Grey Li）：</p>

<div class="contact-info">
    <div class="contact-item">
        <span class="contact-label">邮箱:</span>
        <a href="mailto:gl@greyli.com">gl@greyli.com</a>
    </div>
</div>
            </div> 
        </div>

        <div id="conduct-content" class="content">
            <!-- English Code of Conduct Content -->
            <div id="conduct-english" class="content">
                
<h1 id="code-of-conduct">
    <a href="#code-of-conduct" class="anchor">#</a>
    Code of Conduct
</h1>


    
        <h2 id="our-pledge">
            <a href="#our-pledge" class="anchor">#</a>
            Our Pledge
        </h2>
    
    
    
        <p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p>
    
        <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>
    
    
    
    
    
    
    

    
        <h2 id="our-standards">
            <a href="#our-standards" class="anchor">#</a>
            Our Standards
        </h2>
    
    
    
        <p>Examples of behavior that contributes to a positive environment for our community include:</p>
    
    
    
        <div class="highlight-box">
            <p>• Demonstrating empathy and kindness toward other people<br>• Being respectful of differing opinions, viewpoints, and experiences<br>• Giving and gracefully accepting constructive feedback<br>• Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience<br>• Focusing on what is best not just for us as individuals, but for the overall community</p>
        </div>
    
    
    
        
            <p>Examples of unacceptable behavior include:</p>
        
    
    
    
        <div class="contact-info">
            <p>• The use of sexualized language or imagery, and sexual attention or advances of any kind<br>• Trolling, insulting or derogatory comments, and personal or political attacks<br>• Public or private harassment<br>• Publishing others' private information, such as a physical or email address, without their explicit permission<br>• Other conduct which could reasonably be considered inappropriate in a professional setting</p>
        </div>
    

    
        <h2 id="enforcement-responsibilities">
            <a href="#enforcement-responsibilities" class="anchor">#</a>
            Enforcement Responsibilities
        </h2>
    
    
    
        <p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p>
    
        <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>
    
    
    
    
    
    
    

    
        <h2 id="scope">
            <a href="#scope" class="anchor">#</a>
            Scope
        </h2>
    
    
    
        <p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces.</p>
    
    
    
    
    
    
    

    
        <h2 id="enforcement">
            <a href="#enforcement" class="anchor">#</a>
            Enforcement
        </h2>
    
    
    
        <p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at <a href="mailto:hey@greyli.com">hey@greyli.com</a>.</p>
    
        <p>All complaints will be reviewed and investigated promptly and fairly. All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>
    
    
    
    
    
    
    

    
        <h2 id="attribution">
            <a href="#attribution" class="anchor">#</a>
            Attribution
        </h2>
    
    
    
        <p>This Code of Conduct is adapted from the <a href="https://www.contributor-covenant.org/" target="_blank">Contributor Covenant</a>, version 2.1, available at <a href="https://www.contributor-covenant.org/version/2/1/code_of_conduct.html" target="_blank">https://www.contributor-covenant.org/version/2/1/code_of_conduct.html</a>.</p>
    
    
    
    
    
    
    

            </div>

            <!-- Chinese Code of Conduct -->
            <div id="conduct-chinese" class="content active">
                
<h1 id="code-of-conduct">
    <a href="#code-of-conduct" class="anchor">#</a>
    行为准则
</h1>


    
        <h2 id="our-pledge">
            <a href="#our-pledge" class="anchor">#</a>
            我们的承诺
        </h2>
    
    
    
        <p>作为成员、贡献者和领导者，我们承诺让社区的每一个人都不受骚扰，无论年龄、体型、明显或不明显的残疾、民族、性别特征、性别认同和表达、经验水平、教育程度、社会经济地位、国籍、个人外表、种族、宗教或性取向和性向认同如何。</p>
    
        <p>我们承诺以促进开放、友好、多元、包容和健康的社区的方式行事和互动。</p>
    
    
    
    
    
    
    

    
        <h2 id="our-standards">
            <a href="#our-standards" class="anchor">#</a>
            我们的标准
        </h2>
    
    
    
        <p>有助于为我们的社区创造积极环境的行为包括：</p>
    
    
    
        <div class="highlight-box">
            <p>• 对其他人表现出同情和善意<br>• 尊重不同的观点、看法和经历<br>• 给予并优雅地接受建设性反馈<br>• 承担责任并向受我们错误影响的人道歉，并从经验中学习<br>• 专注于不仅对我们个人最好，而且对整个社区最好的事情</p>
        </div>
    
    
    
        
            <p>不可接受的行为包括：</p>
        
    
    
    
        <div class="contact-info">
            <p>• 使用色情语言或图像，以及任何形式的性关注或性暗示<br>• 恶意评论、侮辱性或贬损性评论，以及个人或政治攻击<br>• 公开或私下骚扰<br>• 未经明确许可，发布他人的私人信息，如物理地址或电子邮件地址<br>• 在专业环境中可能被合理认为不当的其他行为</p>
        </div>
    

    
        <h2 id="enforcement-responsibilities">
            <a href="#enforcement-responsibilities" class="anchor">#</a>
            执行责任
        </h2>
    
    
    
        <p>社区领导者有责任澄清和执行我们的可接受行为标准，并将对他们认为不当、威胁、冒犯或有害的任何行为采取适当和公平的纠正措施。</p>
    
        <p>社区领导者有权利和责任删除、编辑或拒绝不符合本行为准则的评论、提交、代码、wiki编辑、问题和其他贡献，并在适当时传达审核决定的原因。</p>
    
    
    
    
    
    
    

    
        <h2 id="scope">
            <a href="#scope" class="anchor">#</a>
            适用范围
        </h2>
    
    
    
        <p>本行为准则适用于所有社区空间，也适用于个人在公共空间正式代表社区时。</p>
    
    
    
    
    
    
    

    
        <h2 id="enforcement">
            <a href="#enforcement" class="anchor">#</a>
            执行
        </h2>
    
    
    
        <p>可以通过 <a href="mailto:hey@greyli.com">hey@greyli.com</a> 向负责执行的社区领导者报告辱骂、骚扰或其他不可接受的行为。</p>
    
        <p>所有投诉都将得到及时和公平的审查和调查。所有社区领导者都有义务尊重任何事件报告者的隐私和安全。</p>
    
    
    
    
    
    
    

    
        <h2 id="attribution">
            <a href="#attribution" class="anchor">#</a>
            来源
        </h2>
    
    
    
        <p>本行为准则改编自<a href="https://www.contributor-covenant.org/" target="_blank">贡献者契约</a>，版本2.1，可在 <a href="https://www.contributor-covenant.org/version/2/1/code_of_conduct.html" target="_blank">https://www.contributor-covenant.org/version/2/1/code_of_conduct.html</a> 找到。</p>
    
    
    
    
    
    
    

            </div>
        </div>
    </div>
</div>


        <!-- Footer -->
        <div class="footer">
            <div class="footer-content">
                <img src="https://codekitchen.community/uploads/default/original/2X/a/a30744ee5e971bdbd655b1e4e972863ff2f2802c.png" alt="CodeKitchen Community" class="footer-logo">
                <span>© 2025 代码厨房社区 CodeKitchen Community</span>
            </div>
        </div>
    </div>

    <script>
// Preferences management
const STORAGE_KEYS = {
    LANGUAGE: 'codekitchen_language',
    THEME: 'codekitchen_theme'
};

function savePreference(key, value) {
    try {
        localStorage.setItem(key, value);
        console.log(`Saved preference: ${key} = ${value}`);
    } catch (e) {
        console.warn('Failed to save preference to localStorage:', e);
    }
}

function loadPreference(key, defaultValue) {
    try {
        const saved = localStorage.getItem(key);
        if (saved !== null) {
            console.log(`Loaded preference: ${key} = ${saved}`);
            return saved;
        }
    } catch (e) {
        console.warn('Failed to load preference from localStorage:', e);
    }
    return defaultValue;
}

// Detect browser locale and set default language
function detectBrowserLocale() {
    const browserLang = navigator.language || navigator.userLanguage;
    console.log('Browser language detected:', browserLang);
    
    // Check for English variants
    if (browserLang.toLowerCase().startsWith('en')) {
        return 'en';
    }
    
    // Check for Chinese variants (zh, zh-CN, zh-TW, zh-HK, etc.)
    if (browserLang.toLowerCase().startsWith('zh')) {
        return 'zh';
    }
    
    // Default to Chinese for all other languages
    return 'zh';
}

// Initialize preferences: saved preference > browser locale > default
function initializePreferences() {
    const savedLanguage = loadPreference(STORAGE_KEYS.LANGUAGE, null);
    const savedTheme = loadPreference(STORAGE_KEYS.THEME, 'light');
    
    const language = savedLanguage || detectBrowserLocale();
    const theme = savedTheme;
    
    console.log('Initializing with preferences:', { language, theme });
    return { language, theme };
}

const preferences = initializePreferences();
let currentLanguage = preferences.language;
let currentTheme = preferences.theme;
let outlineOpen = false;
let currentTab = 'readme';

function showContent(tabName) {
    console.log('showContent called with:', tabName); // Debug log
    
    // Remove active state from all tabs
    document.querySelectorAll('.readme-tab').forEach(tab => {
        tab.classList.remove('active');
    });
    
    // Hide all main content sections
    const readmeContent = document.getElementById('readme-content');
    const conductContent = document.getElementById('conduct-content');
    
    if (readmeContent) readmeContent.style.display = 'none';
    if (conductContent) conductContent.style.display = 'none';
    
    // Show selected content
    if (tabName === 'readme') {
        if (readmeContent) {
            readmeContent.style.display = 'block';
            currentTab = 'readme';
            if (currentLanguage === 'en') {
                document.getElementById('readme-chinese').classList.remove('active');
                document.getElementById('readme-english').classList.add('active');
            } else {
                document.getElementById('readme-english').classList.remove('active');
                document.getElementById('readme-chinese').classList.add('active');
            }
        }
    } else if (tabName === 'conduct') {
        if (conductContent) {
            conductContent.style.display = 'block';
            currentTab = 'conduct';
            if (currentLanguage === 'en') {
                // Switch to Chinese
                document.getElementById('conduct-chinese').classList.remove('active');
                document.getElementById('conduct-english').classList.add('active');
            } else {
                // Switch to English
                document.getElementById('conduct-english').classList.remove('active');
                document.getElementById('conduct-chinese').classList.add('active');
            }
        }
    }
    
    // Set active tab for the clicked button
    if (event && event.target) {
        const clickedButton = event.target.closest('.readme-tab');
        if (clickedButton) {
            clickedButton.classList.add('active');
        }
    } else {
        // Fallback: find the button by onclick attribute
        const targetButton = document.querySelector(`[onclick*="showContent('${tabName}')"]`);
        if (targetButton) {
            targetButton.classList.add('active');
        }
    }
    
    // Close outline if open
    if (outlineOpen) {
        closeOutline();
    }
}

function toggleOutline() {
    const menu = document.getElementById('outline-menu');
    
    if (outlineOpen) {
        closeOutline();
    } else {
        openOutline();
    }
}

function openOutline() {
    const menu = document.getElementById('outline-menu');
    
    generateOutline();
    menu.classList.add('open');
    outlineOpen = true;
    
    // Close when clicking outside
    setTimeout(() => {
        document.addEventListener('click', handleOutsideClick);
    }, 10);
}

function closeOutline() {
    const menu = document.getElementById('outline-menu');
    
    menu.classList.remove('open');
    outlineOpen = false;
    
    // Remove outside click listener
    document.removeEventListener('click', handleOutsideClick);
}

function handleOutsideClick(event) {
    const dropdown = document.querySelector('.outline-dropdown');
    if (!dropdown || !dropdown.contains(event.target)) {
        closeOutline();
    }
}

function generateOutline() {
    const outlineContent = document.getElementById('outline-content');
    
    // Determine which content is currently active
    let activeContent;
    if (currentTab === 'conduct') {
        if (currentLanguage === 'en') {
            activeContent = document.getElementById('conduct-english');
        } else {
            activeContent = document.getElementById('conduct-chinese');
        }
    } else {
        // For README tab, use the appropriate language content
        if (currentLanguage === 'en') {
            activeContent = document.getElementById('readme-english');
        } else {
            activeContent = document.getElementById('readme-chinese');
        }
    }
    
    if (!activeContent) return;
    
    const headings = activeContent.querySelectorAll('h1, h2, h3');
    
    outlineContent.innerHTML = '';
    
    headings.forEach(heading => {
        const item = document.createElement('div');
        item.className = `outline-menu-item ${heading.tagName.toLowerCase()}`;
        item.textContent = heading.textContent.replace('#', '').trim();
        
        // Create anchor ID if it doesn't exist
        if (!heading.id) {
            const anchorLink = heading.querySelector('.anchor');
            if (anchorLink) {
                const href = anchorLink.getAttribute('href');
                if (href) {
                    heading.id = href.substring(1);
                }
            }
        }
        
        item.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            heading.scrollIntoView({ behavior: 'smooth' });
            closeOutline();
        });
        
        outlineContent.appendChild(item);
    });
}

function updateOutlineLanguage() {
    const outlineTitle = document.getElementById('outline-title');
    if (currentLanguage === 'zh') {
        outlineTitle.textContent = '大纲';
    } else {
        outlineTitle.textContent = 'Outline';
    }
}

function toggleTheme() {
    const body = document.body;
    const themeIcon = document.getElementById('theme-icon');
    
    if (currentTheme === 'light') {
        body.setAttribute('data-theme', 'dark');
        themeIcon.textContent = '☀️';
        currentTheme = 'dark';
    } else {
        body.removeAttribute('data-theme');
        themeIcon.textContent = '🌙';
        currentTheme = 'light';
    }
    
    // Save theme preference
    savePreference(STORAGE_KEYS.THEME, currentTheme);
}

function updateLanguageTitle() {
    const langButton = document.querySelector('.language-switch');
    if (langButton) {
        // Set title to the language that will be switched to
        langButton.title = currentLanguage === 'en' ? '中文' : 'English';
    }
}

function toggleLanguage() {
    const langText = document.getElementById('lang-text');
    
    if (currentLanguage === 'en') {
        // Switch to Chinese
        document.getElementById('readme-english').classList.remove('active');
        document.getElementById('readme-chinese').classList.add('active');
        document.getElementById('conduct-english').classList.remove('active');
        document.getElementById('conduct-chinese').classList.add('active');
        currentLanguage = 'zh';
        
        // Update tab text
        document.getElementById('readme-tab').textContent = '说明文档';
        document.getElementById('conduct-tab').textContent = '行为准则';
        document.getElementById('blog-tab').textContent = '博客';
        document.getElementById('home-tab').textContent = '返回社区';
    } else {
        // Switch to English
        document.getElementById('readme-chinese').classList.remove('active');
        document.getElementById('readme-english').classList.add('active');
        document.getElementById('conduct-chinese').classList.remove('active');
        document.getElementById('conduct-english').classList.add('active');
        currentLanguage = 'en';
        
        // Update tab text
        document.getElementById('readme-tab').textContent = 'README';
        document.getElementById('conduct-tab').textContent = 'Code of Conduct';
        document.getElementById('blog-tab').textContent = 'Blog';
        document.getElementById('home-tab').textContent = 'Back to Community';
    }
    
    // Save language preference
    savePreference(STORAGE_KEYS.LANGUAGE, currentLanguage);
    
    // Update the title for the language button
    updateLanguageTitle();
    
    // Restore the correct content based on current tab
    setTimeout(() => {
        if (currentTab === 'readme') {
            showContent('readme');
        } else if (currentTab === 'conduct') {
            showContent('conduct');
        }
    }, 0);
    
    // Update outline language
    updateOutlineLanguage();
    
    // Regenerate outline if it's open
    if (outlineOpen) {
        generateOutline();
    }
}

// Initialize page based on saved preferences and detected language/theme
function initializePage() {
    console.log('Initializing page with preferences:', { language: currentLanguage, theme: currentTheme });
    
    // Apply saved theme
    const body = document.body;
    const themeIcon = document.getElementById('theme-icon');
    
    if (currentTheme === 'dark') {
        body.setAttribute('data-theme', 'dark');
        if (themeIcon) themeIcon.textContent = '☀️';
    } else {
        body.removeAttribute('data-theme');
        if (themeIcon) themeIcon.textContent = '🌙';
    }
    
    // Set initial UI text and language button
    const langText = document.getElementById('lang-text');
    
    if (currentLanguage === 'zh') {
        // Show Chinese content by default
        document.getElementById('readme-english')?.classList.remove('active');
        document.getElementById('readme-chinese')?.classList.add('active');
        document.getElementById('conduct-english')?.classList.remove('active');
        document.getElementById('conduct-chinese')?.classList.add('active');
        
        // Set UI text to Chinese
        document.getElementById('readme-tab').textContent = '说明文档';
        document.getElementById('conduct-tab').textContent = '行为准则';
        document.getElementById('blog-tab').textContent = '博客';
        document.getElementById('home-tab').textContent = '返回社区';
    } else {
        // Show English content by default
        document.getElementById('readme-chinese')?.classList.remove('active');
        document.getElementById('readme-english')?.classList.add('active');
        document.getElementById('conduct-chinese')?.classList.remove('active');
        document.getElementById('conduct-english')?.classList.add('active');
        
        // Set UI text to English
        document.getElementById('readme-tab').textContent = 'README';
        document.getElementById('conduct-tab').textContent = 'Code of Conduct';
        document.getElementById('blog-tab').textContent = 'Blog';
        document.getElementById('home-tab').textContent = 'Back to Community';
    }
    
    // Update outline language
    updateOutlineLanguage();
    
    // Update the title for the language button
    updateLanguageTitle();
}

// Star Tornado Animation
function createStarTornado() {
    // Create container for stars
    const container = document.createElement('div');
    container.className = 'star-tornado-container';
    document.body.appendChild(container);
    
    // Star symbols array for variety
    const starSymbols = ['⭐', '✨', '🌟', '💫', '⭐', '✨'];
    
    // Create multiple star particles
    const numStars = 80;
    
    for (let i = 0; i < numStars; i++) {
        const star = document.createElement('div');
        star.className = 'star-particle';
        star.textContent = starSymbols[Math.floor(Math.random() * starSymbols.length)];
        
        // Random starting position across the screen bottom
        const startX = Math.random() * window.innerWidth;
        const startY = window.innerHeight + 50; // Start below the screen
        
        star.style.left = startX + 'px';
        star.style.top = startY + 'px';
        
        // Random size variation - much bigger
        const size = 40 + Math.random() * 60;
        star.style.fontSize = size + 'px';
        
        // Choose random animation from 5 different float patterns
        const animations = ['starFloat1', 'starFloat2', 'starFloat3', 'starFloat4', 'starFloat5'];
        const animation = animations[Math.floor(Math.random() * animations.length)];
        
        // Random duration between 2.5s and 5s - faster
        const duration = 2.5 + Math.random() * 2.5;
        
        // Random delay up to 2s - quicker spread
        const delay = Math.random() * 2;
        
        star.style.animation = `${animation} ${duration}s ease-out ${delay}s forwards`;
        
        // Random rotation for variety
        const rotation = Math.random() * 360;
        star.style.transform = `rotate(${rotation}deg)`;
        
        container.appendChild(star);
    }
    
    // Add some extra sparkles that appear later
    setTimeout(() => {
        for (let i = 0; i < 50; i++) {
            const sparkle = document.createElement('div');
            sparkle.className = 'star-particle';
            sparkle.textContent = '✨';
            
            const x = Math.random() * window.innerWidth;
            const y = window.innerHeight + 50; // Start below screen like main stars
            
            sparkle.style.left = x + 'px';
            sparkle.style.top = y + 'px';
            sparkle.style.fontSize = (35 + Math.random() * 45) + 'px';
            
            // Use random animation for sparkles too
            const sparkleAnimations = ['starFloat1', 'starFloat2', 'starFloat3', 'starFloat4', 'starFloat5'];
            const sparkleAnimation = sparkleAnimations[Math.floor(Math.random() * sparkleAnimations.length)];
            const sparkleDuration = 2 + Math.random() * 2.5;
            
            sparkle.style.animation = `${sparkleAnimation} ${sparkleDuration}s ease-out forwards`;
            
            container.appendChild(sparkle);
        }
    }, 500);
    
    // Clean up after animation completes
    setTimeout(() => {
        if (container && container.parentNode) {
            container.parentNode.removeChild(container);
        }
    }, 8000);
    
    // Add button press effect
    const starButton = document.querySelector('.star-button');
    if (starButton) {
        starButton.style.transform = 'scale(0.9)';
        setTimeout(() => {
            starButton.style.transform = '';
        }, 150);
    }
}

// Smooth scrolling for anchor links
document.addEventListener('DOMContentLoaded', function() {
    // Initialize page with detected language
    initializePage();
    
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();
            const href = this.getAttribute('href');
            const target = document.querySelector(href);
            if (target) {
                // Update URL hash
                history.pushState(null, null, href);
                
                // Smooth scroll to target
                target.scrollIntoView({
                    behavior: 'smooth'
                });
            }
        });
    });

    // Add hover effects to headings
    document.querySelectorAll('h1, h2, h3').forEach(heading => {
        heading.addEventListener('mouseenter', function() {
            const anchor = this.querySelector('.anchor');
            if (anchor) {
                anchor.style.opacity = '1';
            }
        });
        
        heading.addEventListener('mouseleave', function() {
            const anchor = this.querySelector('.anchor');
            if (anchor) {
                anchor.style.opacity = '0';
            }
        });
    });
});
    </script>
</body>
</html>